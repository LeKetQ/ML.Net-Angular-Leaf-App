// This file was auto-generated by ML.NET Model Builder. 
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.ML;
using Microsoft.OpenApi.Models;
using static LeafRecognizerModel;

// Configure app
var builder = WebApplication.CreateBuilder(args);
builder.Services.AddPredictionEnginePool<LeafRecognizerModel.ModelInput, LeafRecognizerModel.ModelOutput>()
    .FromFile("LeafRecognizerModel.mlnet");

builder.Services.AddEndpointsApiExplorer();

builder.Services.AddSwaggerGen(c =>
{
    c.SwaggerDoc("v1", new OpenApiInfo { Title = "My API", Description = "Docs for my API", Version = "v1" });
});

// Add CORS policy
builder.Services.AddCors(options =>
{
    options.AddPolicy("AllowAngular", builder =>
        builder.WithOrigins("http://localhost:4200", "https://localhost:4200")
               .AllowAnyHeader()
               .AllowAnyMethod()
               .AllowCredentials());
});


var app = builder.Build();

app.UseSwagger();

app.UseSwaggerUI(c =>
{
    c.SwaggerEndpoint("/swagger/v1/swagger.json", "My API V1");
});

// Enable CORS
app.UseCors("AllowAngular");
app.UseStaticFiles();

// Define prediction route & handler
app.MapPost("api/ML/predict",
    async (PredictionEnginePool<LeafRecognizerModel.ModelInput, LeafRecognizerModel.ModelOutput> predictionEnginePool, [FromForm] ModelInput input) =>
    {
        try
        {
            using (var imageStream = new MemoryStream(input.ImageSource))
            {
                ModelInput finalInput = new()
                {
                    Label = "Unknown",
                    ImageSource = imageStream.ToArray(),
                };

                var prediction = LeafRecognizerModel.Predict(finalInput);
                return Results.Ok(prediction);
            }
        }
        catch (Exception ex)
        {
            return Results.BadRequest($"Prediction error: {ex.Message}");
        }
    });

app.MapGet("api/ML/predict", () =>
{
    return Results.Ok("OK");
});

app.MapGet("/", () =>
{
    return Results.Ok("Root Page");
});

// Run app
app.Run();
